package io.byteforge.skybuddy.runner;

import io.byteforge.skybuddy.api.util.JavaResourceLoader;
import io.byteforge.skybuddy.core.DefaultSkyBuddy;
import org.spongepowered.asm.mixin.Mixins;

import java.io.IOException;
import java.net.URISyntaxException;
import java.nio.file.Path;
import java.util.List;

/**
 * Applies mixin configurations generated by the MixinAnnotationProcessor. Only needed in
 * development environments, as the configurations are added to the fabric.mod.json in production.
 */
@SuppressWarnings("unused")
public class DevEnvironmentMixinApplier {

  public void apply() {
    if (!DefaultSkyBuddy.isDevelopmentEnvironment()) {
      return;
    }

    try {
      List<Path> paths = JavaResourceLoader.listAllFilesFromResources(this, "META-INF/mixins/");
      if (paths.isEmpty()) {
        return;
      }

      for (Path path : paths) {
        Mixins.addConfiguration(path.getFileName().toString());
      }
    } catch (URISyntaxException | IOException e) {
      throw new RuntimeException(e);
    }
  }
}
